;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name slides-mount.components, :imports nil, :requires {jobim jobim.core, jobim.core jobim.core}, :uses nil, :defs {left {:protocol-inline nil, :meta {:file "/home/chris/IdeaProjects/state/slides-mount/src/slides_mount/components.cljs", :line 4, :column 7, :end-line 4, :end-column 11, :arglists (quote ([pct elem]))}, :name slides-mount.components/left, :variadic false, :file "src/slides_mount/components.cljs", :end-column 11, :method-params ([pct elem]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pct elem]))}, list-item-style {:name slides-mount.components/list-item-style, :file "src/slides_mount/components.cljs", :line 11, :column 1, :end-line 11, :end-column 21, :meta {:file "/home/chris/IdeaProjects/state/slides-mount/src/slides_mount/components.cljs", :line 11, :column 6, :end-line 11, :end-column 21}}, SmallerText {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection jobim.core/Slide cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name slides-mount.components/SmallerText, :file "src/slides_mount/components.cljs", :end-column 23, :type true, :column 12, :internal-ctor true, :line 15, :record true, :end-line 15, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->SmallerText {:protocol-inline nil, :meta {:file "/home/chris/IdeaProjects/state/slides-mount/src/slides_mount/components.cljs", :line 15, :column 12, :end-line 15, :end-column 23, :internal-ctor true, :factory :positional, :arglists (quote ([text]))}, :name slides-mount.components/->SmallerText, :variadic false, :file "src/slides_mount/components.cljs", :end-column 23, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}, map->SmallerText {:protocol-inline nil, :meta {:file "/home/chris/IdeaProjects/state/slides-mount/src/slides_mount/components.cljs", :line 15, :column 12, :end-line 15, :end-column 23, :internal-ctor true, :factory :map, :arglists (quote ([G__23244]))}, :name slides-mount.components/map->SmallerText, :variadic false, :file "src/slides_mount/components.cljs", :end-column 23, :method-params ([G__23244]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__23244]))}, Points {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection jobim.core/Slide cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name slides-mount.components/Points, :file "src/slides_mount/components.cljs", :end-column 18, :type true, :column 12, :internal-ctor true, :line 25, :record true, :end-line 25, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Points {:protocol-inline nil, :meta {:file "/home/chris/IdeaProjects/state/slides-mount/src/slides_mount/components.cljs", :line 25, :column 12, :end-line 25, :end-column 18, :internal-ctor true, :factory :positional, :arglists (quote ([items]))}, :name slides-mount.components/->Points, :variadic false, :file "src/slides_mount/components.cljs", :end-column 18, :method-params ([items]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([items]))}, map->Points {:protocol-inline nil, :meta {:file "/home/chris/IdeaProjects/state/slides-mount/src/slides_mount/components.cljs", :line 25, :column 12, :end-line 25, :end-column 18, :internal-ctor true, :factory :map, :arglists (quote ([G__23252]))}, :name slides-mount.components/map->Points, :variadic false, :file "src/slides_mount/components.cljs", :end-column 18, :method-params ([G__23252]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__23252]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{items :ul text :li :margin-left :margin-top :width :style :div :h2 :items :margin-bottom :text}, :order [:div :style :width :margin-left :margin-top :margin-bottom :text :h2 text :items :ul :li items]}, :doc nil}